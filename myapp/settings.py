"""
Django settings for myapp project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path

import dj_database_url


def str_to_bool(input):
    if type(input) == bool:
        return input

    true_terms = ["true", "1", "yes", "y", "t"]
    false_terms = ["false", "0", "no", "n", "f"]

    # Normalize the input string to lowercase to make the function case-insensitive
    normalized_str = input.strip().lower()

    if normalized_str in true_terms:
        return True
    elif normalized_str in false_terms:
        return False
    else:
        raise ValueError("Input string does not represent a boolean value")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
    "SECRET_KEY", "django-insecure-^dd*jyje2dc7!f-^1=gk(mo5eux*1_113ff*ds5io14(u^sp#w"
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = str_to_bool(os.getenv("DEBUG", False))

# Application definition

INSTALLED_APPS = [
    "rest_framework",
    "corsheaders",
    "myapp.apps.MyAppConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework.authtoken",
    "django_crontab",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.AllowAny",),
}

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "https://app.<myapp>.com",
    "https://api.<myapp>.com",
    "http://localhost:8000",
    "http://localhost:3000",
    "http://localhost:5173",
]

ROOT_URLCONF = "myapp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(os.path.normpath(os.path.dirname(__file__)), "templates")
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ALLOWED_HOSTS = ["*"]

WSGI_APPLICATION = "myapp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": dj_database_url.parse(
        os.environ.get("DATABASE_URL", "postgres://postgres:12345678@localhost/myapp")
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_USER_MODEL = "myapp.User"

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {
            "min_length": 8,
        },
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_TOKEN_VALIDITY = timedelta(days=30)

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


USE_TZ = True
TIME_ZONE = "UTC"

CSRF_TRUSTED_ORIGINS = [
    "https://app.<my_app>.com",
    "http://localhost:8000",
    "http://localhost:3000",
    "http://localhost:5173",
]

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

USE_SECURE_SETTINGS = not DEBUG

SECURE_SSL_REDIRECT = USE_SECURE_SETTINGS
SESSION_COOKIE_SECURE = USE_SECURE_SETTINGS
CSRF_COOKIE_SECURE = USE_SECURE_SETTINGS

# Host from where the UI is served rather than the API
DEFAULT_APP_HOST = "http://localhost:3000" if DEBUG else "https://api.<my_app>.com"

APP_HOST = os.getenv("APP_HOST", DEFAULT_APP_HOST)
